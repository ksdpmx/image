name: Image CI

on:
  push:
    branches:
    - '**'
    paths:
    - '**/Dockerfile'
  pull_request:
    branches:
    - '**'

jobs:
  gitcommit:
    name: Detect git changes
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.repos.outputs.repos }}
    steps:
    - name: checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: get all changed images
      id: repos
      run: |
        repos="[]"
        repos=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
          | grep -Ev '^\.github' \
          | awk -F '/' '{print $1}' \
          | sort -u \
          | jq -R -s -c 'split("\n")[:-1]')
        if [[ -z "$repos" || "$repos" == "[]" ]]; then
          echo "no changed repos found, exiting.."
          exit 0
        fi
        echo "repos=$repos" >> "$GITHUB_OUTPUT"
  build:
    name: Build and push images
    needs: gitcommit
    runs-on: ubuntu-latest
    outputs:
      fulltags: ${{ steps.tags.outputs.fulltags }}
    if: needs.gitcommit.outputs.repos != '[]'
    strategy:
      matrix:
        repo: ${{ fromJson(needs.gitcommit.outputs.repos || '[]') }}
    steps:
    - name: checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: generate tags
      id: tags
      run: |
        repo=${{ matrix.repo }}
        QUAY_REPO="quay.io/zhangj30_lnlp/$repo"
        GHCR_REPO="ghcr.io/${{ github.actor }}/$repo"
        COMMIT_ID=${GITHUB_SHA:0:7}
        TAGS="$QUAY_REPO:$COMMIT_ID,$GHCR_REPO:$COMMIT_ID"
        BRANCH_NAME=${GITHUB_REF_NAME}
        TAGS="$TAGS,$QUAY_REPO:$BRANCH_NAME,$GHCR_REPO:$BRANCH_NAME"
        if [[ "${BRANCH_NAME}" == "main" ]]; then
          TAGS="$TAGS,$QUAY_REPO:latest,$GHCR_REPO:latest"
        fi
        echo "tags=$TAGS" >> "$GITHUB_OUTPUT"
        # only scan one image tag
        # TODO append for multiple images?
        echo "fulltags=$(echo $GHCR_REPO:$COMMIT_ID | tr ',' '\n' | jq -R -s -c 'split("\n")[:-1]')" >> "$GITHUB_OUTPUT"
    - name: ignore if dockerfile is missing
      run: |
        if [[ ! -f "./${{ matrix.repo }}/Dockerfile" ]]; then
          echo "No Dockerfile found for ${{ matrix.repo }}, skipping..."
          exit 0
        fi
    - name: log in to quay.io
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}
    - name: log in to ghcr.io
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}
    - name: build and push multi-arch image
      uses: docker/build-push-action@v5
      with:
        context: ./${{ matrix.repo }}
        file: ./${{ matrix.repo }}/Dockerfile
        pull: true
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ${{ steps.tags.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
  scan:
    name: Scan images
    needs: build
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    if: needs.build.outputs.fulltags != '[]'
    strategy:
      matrix:
        fulltag: ${{ fromJson(needs.build.outputs.fulltags || '[]') }}
    steps:
    - name: scan images
      uses: anchore/scan-action@v6
      id: scan
      with:
        image: ${{ matrix.fulltag }}
        fail-build: false
    - name: upload anchore sarif
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}
